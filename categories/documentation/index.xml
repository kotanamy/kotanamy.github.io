<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Documentation - Категория - Kotanamy</title>
        <link>https://kotanamy.github.io/categories/documentation/</link>
        <description>Documentation - Категория - Kotanamy</description>
        <generator>Hugo -- gohugo.io</generator><language>ru</language><lastBuildDate>Wed, 04 May 2022 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://kotanamy.github.io/categories/documentation/" rel="self" type="application/rss+xml" /><item>
    <title>Road to IOS/Swift dev part 9</title>
    <link>https://kotanamy.github.io/posts/swift_part_9/</link>
    <pubDate>Wed, 04 May 2022 00:00:00 &#43;0000</pubDate>
    <author>Автор</author>
    <guid>https://kotanamy.github.io/posts/swift_part_9/</guid>
    <description><![CDATA[Road to IOS/Swift dev part 9 Стартовые понятия Swift 15. Наблюдатели свойств(property observers) Наблюдатели свойств - это такие штуковины, которые наблюдают за изменениями значения свойств
willSet - будет изменено
didSet - было изменено
Само значение изменяется где-то между willSet и didSet
class SecretLabEmployee { var accessLevel = 0 { willSet { // неявно willSet(newValue) print(&#34;willSet&#34;) print(&#34;new access level = \(newValue)&#34;) } didSet { // неявно didSet(oldValue)  if accessLevel &gt; 0 { accessToDB = true } else { accessToDB = false } print(&#34;didSet, oldValue \(oldValue)&#34;) } } var accessToDB = false } let emp = SecretLabEmployee() emp.]]></description>
</item><item>
    <title>Road to IOS/Swift dev part 8</title>
    <link>https://kotanamy.github.io/posts/swift_part_8/</link>
    <pubDate>Tue, 03 May 2022 00:00:00 &#43;0000</pubDate>
    <author>Автор</author>
    <guid>https://kotanamy.github.io/posts/swift_part_8/</guid>
    <description><![CDATA[Road to IOS/Swift dev part 8 Стартовые понятия Swift 13. Вычисляемые свойства class Rectangular { let height: Int let width: Int let depth: Int var volume: Int { // вычисляемое свойство (объем) return height * width * depth } init(height: Int, width: Int, depth: Int){ self.height = height self.width = width self.depth = depth } } let rect = Rectangular(height: 2, width: 3, depth: 4) print(rect.volume) // 24 Герттеры и сеттеры]]></description>
</item><item>
    <title>Road to IOS/Swift dev part 7</title>
    <link>https://kotanamy.github.io/posts/swift_part_7/</link>
    <pubDate>Mon, 02 May 2022 00:00:00 &#43;0000</pubDate>
    <author>Автор</author>
    <guid>https://kotanamy.github.io/posts/swift_part_7/</guid>
    <description><![CDATA[Road to IOS/Swift dev part 7 Стартовые понятия Swift 12. Классы (Class) 12.1 Первое знакомство с классами
Класс - это план или шаблон для экземпляра класса. Экземпляр класса называется объект. Классы похожи на структуры, поэтому в статью про структуры я включу описание различий классов и структур.
class Human { var name = &#34;Dimon&#34; // константы и переменные в классе называются свойствами var age: Int? = 30 // у девушек возраст спрашивать нельзя var hairs = true func description() -&gt; String { // функции в классе называют методами if let _age = age { // если вдруг женщина return &#34;Im \(name)and age = \(_age)&#34; } else { return &#34;Im \(name)and i woman&#34; } } } let humanOne = Human() // ссылка на объект типа Human humanOne - const humanOne.]]></description>
</item><item>
    <title>Road to IOS/Swift dev part 6</title>
    <link>https://kotanamy.github.io/posts/swift_part_6/</link>
    <pubDate>Sun, 01 May 2022 00:00:00 &#43;0000</pubDate>
    <author>Автор</author>
    <guid>https://kotanamy.github.io/posts/swift_part_6/</guid>
    <description><![CDATA[Road to IOS/Swift dev part 6 Стартовые понятия Swift 10. Кортежи (Tuples) Кортежи в Swift представляют набор значений, которые рассматриваются как один объект. Для создания кортежа используются скобки, внутри которых записываются все элементы кортежа.
Simple:
let one = 1 let two = 2 let three = 3 (one, two, three) // кортеж Вызов элемента кортежа:
let boy = (5, &#34;Sergey&#34;) print(boy.0) print(boy.1) // Так же можно явно указать тип значений let cloneBoy: (Int, Strint) = (5, &#34;Sergey(Clone)&#34;) Присвоим нескольким константам несколько значений]]></description>
</item><item>
    <title>Road to IOS/Swift dev part 5</title>
    <link>https://kotanamy.github.io/posts/swift_part_5/</link>
    <pubDate>Fri, 29 Apr 2022 00:00:00 &#43;0000</pubDate>
    <author>Автор</author>
    <guid>https://kotanamy.github.io/posts/swift_part_5/</guid>
    <description><![CDATA[Road to IOS/Swift dev part 5 Стартовые понятия Swift 8. Функции Функции - это самостоятельные фрагменты кода, решающие определенную задачу. Каждой функции присваивается уникальное имя, по которому ее можно идентифицировать и &ldquo;вызвать&rdquo; в нужный момент. Каждая функция в Swift имеет тип, описывающий тип параметров функции и тип возвращаемого значения. Тип функции можно использовать аналогично любым другим типам в Swift, т.е. одна функция может быть параметром другой функции либо ее результирующим значением.]]></description>
</item><item>
    <title>Road to IOS/Swift dev part 4</title>
    <link>https://kotanamy.github.io/posts/swift_part_4/</link>
    <pubDate>Thu, 14 Apr 2022 00:00:00 &#43;0000</pubDate>
    <author>Автор</author>
    <guid>https://kotanamy.github.io/posts/swift_part_4/</guid>
    <description><![CDATA[Road to IOS/Swift dev part 4 Стартовые понятия Swift 7. Циклы 7.1 Цикл for
for i in 0...5 { print(i) } let arr = [&#34;A&#34;, &#34;B&#34;, &#34;C&#34;] for i in arr{ print(i) } А со словарями следующая ситуация:
let peopleAndViews = [&#34;Johe news&#34;: 712354, &#34;Marmok&#34;: 1410319312, &#34;Joma tech&#34;: 5013001] for (name, view) in peopleAndViews { print(&#34;Name: \(name)View: \(view)&#34;) } Найдем индекс и число которое делится на 2
let arr = [10,20,3,78,41,1] for (index, value) in arr.]]></description>
</item><item>
    <title>Road to IOS/Swift dev part 3</title>
    <link>https://kotanamy.github.io/posts/swift_part_3/</link>
    <pubDate>Wed, 13 Apr 2022 00:00:00 &#43;0000</pubDate>
    <author>Автор</author>
    <guid>https://kotanamy.github.io/posts/swift_part_3/</guid>
    <description><![CDATA[Road to IOS/Swift dev part 3 Стартовые понятия Swift 6. Условные операторы 6.1 if
Конструкция if проверяет истинность некоторого условия и в зависимости от результатов проверки выполняет отпределенный код
Условия бывают:
 if a != b if a &lt;= b if a &gt;= b if a &gt; b if a &lt; b if a ~= b // где a - диапазон  let a = 1 let b = 2 if(a == b){ print(&#34;а равно b&#34;) } else if(a &gt; b){ print(&#34;a больше b&#34;) } else { print(&#34;в другом случае&#34;) } // можно просто Bool подставить в условие let boolVal = true if boolVal { print(&#34;true&#34;) } else { print(&#34;false&#34;) } // условие с диапазоном if 1.]]></description>
</item><item>
    <title>Road to IOS/Swift dev part 2</title>
    <link>https://kotanamy.github.io/posts/swift_part_2/</link>
    <pubDate>Tue, 12 Apr 2022 00:00:00 &#43;0000</pubDate>
    <author>Автор</author>
    <guid>https://kotanamy.github.io/posts/swift_part_2/</guid>
    <description><![CDATA[Road to IOS/Swift dev part 2 Стартовые понятия Swift 4. Интерполяция строки Интерполяция строки - это когда вы хотите внутрь строки вставить константу или переменную
let world = &#34;World&#34; let sd = &#34;Swift Developer&#34; let helloWorld = &#34;Hello \(world)or \(sd)&#34; // &#34;Hello World or Swift Developer&#34; 5. Типы коллекций Swift обеспечивает три основных типа коллекций - это массивы, множества и словари.
5.1 Массивы
Массив - это упорядоченная коллекция в которой могут содержатся переменные одного типа]]></description>
</item><item>
    <title>Road to IOS/Swift dev part 1</title>
    <link>https://kotanamy.github.io/posts/swift_part_1/</link>
    <pubDate>Mon, 11 Apr 2022 00:00:00 &#43;0000</pubDate>
    <author>Автор</author>
    <guid>https://kotanamy.github.io/posts/swift_part_1/</guid>
    <description><![CDATA[Road to IOS/Swift dev part 1 Стартовые понятия Swift 1. Предисловие То что вы читаете - это подобие туториалов для начинающих по языку Swift и IOS разработке. Понятие не имею зачем написал первые 5 туторов, для начинающих это будет скорее вредно, чем полезно, так что рекомендую начать с каких-нибудь курсов (например, swiftbook), а для матерых прогеров он не несет какой-то ценности.
2. Константы и переменные Примечание: функция print() выводит входные аргументы на экран]]></description>
</item><item>
    <title>Markdown для генератора статических сайтов</title>
    <link>https://kotanamy.github.io/posts/markdown_tutorial/</link>
    <pubDate>Sun, 10 Apr 2022 00:00:00 &#43;0000</pubDate>
    <author>Автор</author>
    <guid>https://kotanamy.github.io/posts/markdown_tutorial/</guid>
    <description><![CDATA[Markdown для генератора статических сайтов Заголовки # H1## H2### H3#### H4##### H5###### H6 H1 H2 H3 H4 H5 H6 Выделение *Курсив* или _курсив_**Полужирный** или __полужирный__**Комбинированное _выделение_**~~Зачеркнутое~~ Курсив или курсив Полужирный или полужирный Комбинированное выделение Зачеркнутое Списки . в начале строки это пробел\n - переход на новую строку1. А2. Б..* Ненумерованный вложенный список 1. А...1. а...2. б2.]]></description>
</item></channel>
</rss>
